apiVersion: tmax.io/v1alpha1
kind: CatalogServiceClaim
metadata:
  name: nginx-catalog-service-claim
  namespace: default
spec:
  apiVersion: tmax.io/v1
  kind: Template
  metadata:
    name: nginx-template
    namespace: default
  imageUrl: example.com/example.gif
  provider: tmax
  recommend: true
  urlDescription: 'http://url.example.com'
  tags:
    - nginx
  objects:
    - fields:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: '${NAME}'
          labels:
            app: '${NAME}'
        spec:
          selector:
            matchLabels:
              app: '${NAME}'
          template:
            metadata:
              labels:
                app: '${NAME}'
            spec:
              containers:
                - name: '${NAME}'
                  image: '${IMAGE}'
                  ports:
                    - name: http
                      containerPort: 80
                  resources:
                    requests:
                      cpu: 1
              tolerations:
                - effect: NoExecute
                  key: node.kubernetes.io/not-ready
                  tolerationSeconds: 10
                - effect: NoExecute
                  key: node.kubernetes.io/unreachable
                  tolerationSeconds: 10
    - fields:
        apiVersion: v1
        kind: Service
        metadata:
          name: '${NAME}'
        spec:
          ports:
            - name: http
              port: 81
              protocol: TCP
              targetPort: 80
          selector:
            app: '${NAME}'
          type: LoadBalancer
    - fields:
        apiVersion: v1
        kind: Secret
        metadata:
          name: '${NAME}'
        data:
          host: ZHVtbXk=
  parameters:
    - name: NAME
      description: Application name
      valueType: string
      value: nginx
    - name: IMAGE
      description: Application Docker Image
      valueType: string
      value: nginx
  plans:
    - fields:
        name: example-plan1
        description: example
        metadata:
          bullets:
            - feat 1
            - feat 2
          costs:
            amount: 100
            unit: $
        free: false
        bindable: true
        plan_updateable: false
        schemas:
          service_instance:
            create:
              parameters:
                NAME: nginx1
                IMAGE: 'nginx:1'
    - fields:
        name: example-plan2
        description: example
        metadata:
          bullets:
            - feat 1
            - feat 2
          costs:
            amount: 200
            unit: $
        free: false
        bindable: true
        plan_updateable: false
        schemas:
          service_instance:
            create:
              parameters:
                NAME: nginx2
                IMAGE: 'nginx:1'
